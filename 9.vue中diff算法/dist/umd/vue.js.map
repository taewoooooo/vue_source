{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util/index.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observer/schedular.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/extend.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["\n\n// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n// slice()\n\n\nlet oldArrayMethods = Array.prototype;\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods); \n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'sort',\n    'splice',\n    'reverse'\n]\nmethods.forEach(method=>{\n    arrayMethods[method] = function (...args) { \n        const result = oldArrayMethods[method].apply(this,args); // 调用原生的数组方法\n        // push unshift 添加的元素可能还是一个对象\n        let inserted; // 当前用户插入的元素\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice': // 3个  新增的属性 splice 有删除 新增的的功能 arr.splice(0,1,{name:1})\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        if(inserted) ob.observerArray(inserted); // 将新增属性继续观测\n\n        ob.dep.notify(); // 如果用户调用了 push方法 我会通知当前这个dep去更新\n        return result;\n    }\n})","\n/**\n * \n * @param {*} data  当前数据是不是对象\n */\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null;\n}\nexport function def(data,key,value){\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value\n    })\n}\n// 取值时实现代理效果\nexport function proxy(vm,source,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue; \n        }\n    })\n}\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed'\n];\n\nlet strats = {}\n\nfunction mergeHook(parentVal,childVal){\n    if(childVal){\n        if(parentVal){\n            return parentVal.concat(childVal);\n        }else{\n           return [childVal]; \n        }\n    }else{\n        return parentVal;\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})\n\nfunction mergeAssets(parentVal,childVal) {\n    const res = Object.create(parentVal) // res.__proto__ = parentVal\n    if(childVal){\n        for(let key in childVal){\n            res[key] = childVal[key];\n        }\n    }\n    return res;\n}\n\n\nstrats.components = mergeAssets\n\nexport function mergeOptions(parent,child){\n    const options = {};\n    for(let key in parent){\n        mergeField(key);\n    }\n    for(let key in child){ //  如果已经合并过了就不需要再次合并了\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key);\n        }\n    }\n    // 默认的合并策略 但是有些属性 需要有特殊的合并方式 生命周期的合并\n    function mergeField(key) {\n        if(strats[key]) {\n            return options[key] = strats[key](parent[key],child[key])\n        }\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\n            options[key] = {\n                ...parent[key],\n                ...child[key]\n            }\n        }else if(child[key] == null){\n            options[key] = parent[key];\n        }else{\n            options[key] = child[key];\n        }   \n    }\n    return options;\n}\n\n\nexport const isReservedTag = (tagName)=>{\n\n    let str = 'p,div,span,input,button';\n    let obj = {}\n    str.split(',').forEach(tag=>{\n        obj[tag] = true;\n    });\n\n    return obj[tagName];\n\n}","let id = 0;\nclass Dep{\n    constructor(){\n        this.id = id++;\n        this.subs = []; \n    }\n    addSub(watcher){\n        this.subs.push(watcher); // 观察者模式\n    }\n    depend(){\n        // 让这个watcher 记住我当前的dep,如果watcher没存过dep ，dep肯定不能存过watcher\n        Dep.target.addDep(this);\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nlet stack = [];\n// 目前可以做到 将watcher保留起来 和 移除的功能\nexport function pushTarget(watcher){\n    Dep.target = watcher;\n    stack.push(watcher);\n}\nexport function popTarget(){\n    stack.pop();\n    Dep.target = stack[stack.length -1];\n}\n\n\nexport default Dep","// 把data中的数据 都使用Object.defineProperty重新定义 es5\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\nimport {arrayMethods} from './array.js'\nimport {\n    isObject,def\n} from '../util/index'\nimport Dep from './dep.js';\n// 后续我可以知道它是不是一个已经观察了的数据 __ob__\nclass Observer{  \n    constructor(value){  // 仅仅是初始化的操作\n        this.dep = new Dep; // 给数组用的\n        // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\n        // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\n        def(value,'__ob__',this);\n        if(Array.isArray(value)){\n            // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\n            // 前端开发中很少很少 去操作索引 push shift unshift \n            value.__proto__ = arrayMethods;\n            // 如果数组里放的是对象我再监控\n            this.observerArray(value); //  这里虽然递归了 但是没有依赖收集\n        }else{\n             // 对数组监控\n            this.walk(value); // 对对象进行观测\n        }\n    }\n    observerArray(value){ // [{}]\n        for(let i = 0; i < value.length;i++){\n            observe(value[i]);\n        }\n    }\n    walk(data){\n        let keys = Object.keys(data); // [name,age,address]\n        // 如果这个data 不可配置 直接reurn\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key]);\n        });\n    }\n}\n// Vue.observable\nfunction defineReactive(data,key,value){\n    let dep = new Dep(); // 这个dep 是为了给对象使用的\n    // 这里这个value可能是数组 也可能是对象 ，返回的结果是observer的实例，当前这个value对应的observer\n    let childOb = observe(value); // 数组的observer实例\n    Object.defineProperty(data,key,{\n        configurable:true,\n        enumerable:true,\n        get(){ //  获取值的时候做一些操作 \n           // 每个属性都对应着自己的watcher\n            if(Dep.target) { // 如果当前有watcher \n                dep.depend(); // 意味着我要将watcher存起来\n                if(childOb){ // *******数组的依赖收集*****\n                    childOb.dep.depend(); // 收集了数组的相关依赖\n\n                    // 如果数组中还有数组\n                    if(Array.isArray(value)){\n                        dependArray(value);\n                    }\n\n                }\n            }\n            return value;\n        },\n        set(newValue){ // 也可以做一些操作\n            // console.log('更新数据')\n            if(newValue === value) return;\n            observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\n            value = newValue;\n            dep.notify(); // 通知依赖的watcher来进行一个更新操作\n        }\n    });\n}\nfunction dependArray(value){\n    for(let i =0 ; i < value.length;i++){\n        let current = value[i]; // 将数组中的每一个都取出来，数据变化后 也去更新视图\n        // 数组中的数组的依赖收集\n        current.__ob__ && current.__ob__.dep.depend();\n        if(Array.isArray(current)){\n            dependArray(current);\n        }\n    }\n}\n\nexport function observe(data) {\n    let isObj = isObject(data);\n    if (!isObj) {\n        return\n    }\n    return new Observer(data); // 用来观测数据\n}\n","import {\n    observe\n} from './observer/index.js'\nimport {\n    proxy\n} from './util/index'\nexport function initState(vm) {\n    const opts = vm.$options;\n    // vue的数据来源 属性 方法 数据 计算属性 watch\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethod(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\n\nfunction initProps() {}\n\nfunction initMethod() {}\n\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data; // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 对象劫持 用户改变了数据 我希望可以得到通知 =》 刷新页面\n    // MVVM模式 数据变化可以驱动视图变化 \n    // Object.defineProperty () 给属性增加get方法和set方法\n\n    // 为了让用户更好的使用 我希望可以直接vm.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n    observe(data); // 响应式原理\n}\n\nfunction initComputed() {}\n\nfunction initWatch() {}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function parseHTML(html) {\n\n    let root = null; // ast语法树的树根\n    let currentParent; // 标识当前父亲是谁\n    let stack = [];\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tagName, attrs) {\n        // 遇到开始标签 就创建一个ast元素s\n        let element = createASTElement(tagName, attrs);\n        if (!root) {\n            root = element;\n        }\n        currentParent = element; // 把当前元素标记成父ast树\n        stack.push(element); // 将开始标签存放到栈中\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            currentParent.children.push({\n                text,\n                type: TEXT_TYPE\n            })\n        }\n    }\n\n    function end(tagName) {\n        let element = stack.pop(); // 拿到的是ast对象\n        // 我要标识当前这个p是属于这个div的儿子的\n        currentParent = stack[stack.length - 1];\n        if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element); // 实现了一个树的父子关系\n        }\n    }\n    // 不停的去解析html字符串\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]); // 2解析结束标签\n                continue;\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd);\n        }\n        if (text) {\n            advance(text.length);\n            chars(text); // 3解析文本\n        }\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        let start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length); // 将标签删除\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // 将属性进行解析\n                advance(attr[0].length); // 将属性去掉\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                });\n            }\n            if (end) { // 去掉开始标签的 >\n                advance(end[0].length);\n                return match\n            }\n        }\n    }\n    return root;\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\n    let str = '';\n    for(let i = 0; i < attrs.length;i++){\n        let attr = attrs[i];\n        if(attr.name === 'style'){\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\n            let obj = {};\n            attr.value.split(';').forEach(item=>{\n                let [key,value] = item.split(':');\n                obj[key] = value\n            });\n            attr.value = obj;\n        }\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\nfunction genChildren(el){\n    let children = el.children;\n    if(children && children.length > 0){\n        return `${children.map(c=>gen(c)).join(',')}`\n    }else{\n        return false;\n    }\n}\nfunction gen(node){\n    if(node.type == 1){\n        // 元素标签\n        return generate(node);\n    }else{\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\n        let tokens = [];\n        let match,index;\n        // 每次的偏移量 buffer.split()\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\n        while(match = defaultTagRE.exec(text)){\n            index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`;\n    }\n}\nexport function generate(el){ // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\n    let children = genChildren(el);\n    let code = `_c(\"${el.tag}\",${\n       el.attrs.length?genProps(el.attrs):'undefined'\n    }${\n        children? `,${children}` :''\n    })\n    `\n    return code;\n}","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\n// ?: 匹配不捕获\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\nimport {parseHTML} from './parser-html';\nimport {generate} from './generate';\nexport function compileToFunction(template) {\n    // 1) 解析html字符串 将html字符串 => ast语法树\n    let root = parseHTML(template);\n    // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\n    let code = generate(root);\n    // 核心思路就是将模板转化成 下面这段字符串\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\n    // 将ast树 再次转化成js的语法\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\n\n    // 所有的模板引擎实现 都需要new Function + with\n    let renderFn = new Function(`with(this){ return ${code}}`);\n\n\n    // vue的render 他返回的是虚拟dom\n    return renderFn;\n}\n\n\n\n\n\n//   hellpo\n//      <p></p>\n// </div>\n\n\n// let root = {\n//     tag:'div',\n//     attrs:[{name:'id',value:'app'}],\n//     parent:null,\n//     type:1,\n//     children:[{\n//         tag:'p',\n//         attrs:[],\n//         parent:root,\n//         type:1,\n//         children:[\n//             {\n//                 text:'hello',\n//                 type:3\n//             }\n//         ]\n//     }]\n// }","let callbacks = []\n// [flushSchedularQueue,userNextTick]\nlet waiting = false;\nfunction flushCallback(){\n    callbacks.forEach(cb=>cb()); \n    waiting = false;\n    callbacks = [];\n}\nexport function nextTick(cb){\n    // 多次调用nextTick 如果没有刷新的时候 就先把他放到数组中,\n    // 刷新后 更改waiting\n    callbacks.push(cb);\n    if(waiting === false){\n        setTimeout(flushCallback, 0);\n        waiting = true;\n    }\n}\n\n// 这个地方 非常的（饶） 只能自己加一些你自己的理解\n// 不要过度的理解 \n\n// 给大家花两个小时先过一下 vue源码  怎么分析源码","let queue = [];\nlet has = {};\nimport {nextTick} from '../util/next-tick';\n\n\n\nfunction flushSchedularQueue(){\n    queue.forEach(watcher=>watcher.run());\n    queue = [] ; // 让下一次可以继续使用\n    has = {};\n}\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n    if (has[id] == null) {\n        queue.push(watcher);\n        has[id] = true;\n\n        // 宏任务和微任务 （vue里面使用Vue.nextTick）\n        // Vue.nextTick = promise / mutationObserver / setImmediate/ setTimeout\n        nextTick(flushSchedularQueue)\n    }\n}","import {\n    pushTarget,\n    popTarget\n} from './dep.js';\n\nimport {queueWatcher} from './schedular'\nlet id = 0;\nclass Watcher {\n    constructor(vm, exprOrFn, callback, options) {\n        this.vm = vm;\n        this.callback = callback;\n        this.options = options;\n        this.id = id++;\n        this.getter = exprOrFn; // 将内部传过来的回调函数 放到getter属性上\n        this.depsId = new Set(); // es6中的集合 （不能放重复项）\n        this.deps = [];\n        this.get(); // 调用get方法 会让渲染watcher执行\n    }\n    addDep(dep) { // watcher 里不能放重复的dep  dep里不能放重复的watcher\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this);\n        }\n    }\n    get() {\n        pushTarget(this); // 把watcher存起来  Dep.target = this\n        this.getter(); // 渲染watcher的执行  \n        popTarget(); // 移除watcher\n    }\n    update() {\n        queueWatcher(this);\n        // console.log(this.id)\n        // 等待着 一起来更新 因为每次调用update的时候 都放入了watcher\n        // this.get();\n    }\n    run(){\n        this.get();\n    }\n}\n// 下次课 会带大家看一次vue的源代码\n\n// 在模板中取值时 会进行依赖收集 在更改数据是会进行对应的watcher 调用更新操作\n// dep 和 watcher 是一个多对多的关系  dep里存放着相关的watcher 是一个观察者模式\nexport default Watcher","export function patch(oldVnode, vnode) {\n    // 1.判断是更新还是要渲染\n    if (!oldVnode) {\n        // 通过当前的虚拟节点 创建元素并返回\n        return createElm(vnode);\n    } else {\n        const isRealElement = oldVnode.nodeType;\n        if (isRealElement) {\n            const oldElm = oldVnode; // div id=\"app\"\n            const parentElm = oldElm.parentNode; // body\n\n            let el = createElm(vnode);\n            parentElm.insertBefore(el, oldElm.nextSibling)\n            parentElm.removeChild(oldElm);\n\n            // 需要将渲染好的结果返回\n            return el;\n        } else {\n            //  1.标签不一致直接替换即可\n            if (oldVnode.tag !== vnode.tag) {\n                // 标签不一致\n                oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el)\n            }\n            //console.log(oldVnode,vnode);\n            // 比对两个虚拟节点 操作真实的dom\n\n\n            // 2.如果文本呢？ 文本都没有tag \n            if (!oldVnode.tag) { // 这个就是文本的情况, 如果内容不一致直接 替换掉文本\n                if (oldVnode.text !== vnode.text) {\n                    oldVnode.el.textContent = vnode.text;\n                }\n            }\n\n            // 3.说明标签一致而且不是文本了  (比对属性是否一致)\n            let el = vnode.el = oldVnode.el;\n            // vnode是新的虚拟节点\n            updateProperties(vnode, oldVnode.data);\n\n            // 我需要比对儿子\n            let oldChildren = oldVnode.children || [];\n            let newChildren = vnode.children || [];\n\n            if (oldChildren.length > 0 && newChildren.length > 0) {\n                // 新老都有儿子 需要比对里面的儿子\n                updateChildren(el, oldChildren, newChildren);\n\n            } else if (newChildren.length > 0) {\n                // 新的有孩子 老的没孩子 ，直接将孩子虚拟节点转化成真实节点 插入即可\n                for (let i = 0; i < newChildren.length; i++) {\n                    let child = newChildren[i];\n                    el.appendChild(createElm(child))\n                }\n            } else if (oldChildren.length > 0) {\n                // 老的有孩子 新的没孩子\n                el.innerHTML = '';\n            }\n        }\n    }\n    // 递归创建真实节点 替换掉老的节点\n}\n\nfunction isSameVnode(oldVnode, newVnode) {\n    return (oldVnode.tag == newVnode.tag) && (oldVnode.key === newVnode.key);\n}\n\nfunction updateChildren(parent, oldChildren, newChildren) {\n    // vue采用的是双指针的方式\n\n    // vue在内部比对的过程中做了很多优化策略\n    let oldStartIndex = 0;\n    let oldStartVnode = oldChildren[0];\n    let oldEndIndex = oldChildren.length - 1;\n    let oldEndVnode = oldChildren[oldEndIndex]\n\n\n    let newStartIndex = 0;\n    let newStartVnode = newChildren[0];\n    let newEndIndex = newChildren.length - 1;\n    let newEndVnode = newChildren[newEndIndex];\n\n    const makeIndexByKey = (children)=>{\n        let map = {};\n        children.forEach((item,index)=>{\n            if(item.key){\n              map[item.key] = index; // 根据key 创建一个映射表\n            }\n        })\n        return map;\n    }\n    let map = makeIndexByKey(oldChildren);\n\n    // 在比对的过程中 新老虚拟节点有一方循环完毕就结束\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        // 优化向后插入的情况\n        if(!oldStartVnode){ // 在老指针移动过程中可能会碰到undefined\n            oldStartVnode = oldChildren[++oldStartIndex]\n        }else if(!oldEndVnode){\n            oldEndVnode = oldChildren[--oldEndIndex];\n        }else\n        if (isSameVnode(oldStartVnode, newStartVnode)) {\n            // 如果是同一个节点 就需要比对这个元素的属性\n            patch(oldStartVnode, newStartVnode); // 比对开头节点\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n            // 优化向前插入的情况\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex]\n        }\n        // 头移尾  (涉及到 倒叙变成正序)\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode);\n            parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex]\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parent.insertBefore(oldEndVnode.el, oldStartVnode.el);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else {\n            // 暴力比对  乱序\n            // 先根据老节点的key 做一个映射表，拿新的虚拟节点去映射表中查找，如果可以查找到，则进行移动操作（移到头指针的前面位置）  如果找不到则直接将元素插入即可\n            let moveIndex = map[newStartVnode.key];\n            if(!moveIndex){ // 不需要复用\n                parent.insertBefore(createElm(newStartVnode),oldStartVnode.el);\n            }else{\n                // 如果在映射表中查找到了，则直接将元素移走，并且将当前位置置为空\n                let moveVnode = oldChildren[moveIndex]; // 我要移动的那个元素\n                oldChildren[moveIndex] = undefined; // 占位防止塌陷\n                parent.insertBefore(moveVnode.el,oldStartVnode.el);\n                patch(moveVnode,newStartVnode);\n            }\n            newStartVnode = newChildren[++newStartIndex];\n        }\n    }\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            let el = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el;\n            parent.insertBefore(createElm(newChildren[i]), el); // 写null 就等价于appendChild\n            // 将新增的元素直接进行插入  (可能是像后插入 也有可能从头插入)  insertBefore\n        }\n    }\n    if(oldStartIndex <= oldEndIndex){\n        for(let i = oldStartIndex; i<= oldEndIndex;i++){\n            let child = oldChildren[i];\n            if(child!= undefined){\n                debugger\n                parent.removeChild(child.el);\n            }\n        }\n    }\n}\nfunction createComponent(vnode) { // 初始化的作用\n    // 需要创建组件的实例\n    let i = vnode.data;\n    if ((i = i.hook) && (i = i.init)) {\n        i(vnode);\n    }\n\n    // 执行完毕后 \n    if (vnode.componentInstance) {\n        return true;\n    }\n}\nexport function createElm(vnode) { // 根据虚拟节点创建真实的节点\n    let {\n        tag,\n        children,\n        key,\n        data,\n        text\n    } = vnode;\n    // 是标签就创建标签\n    if (typeof tag === 'string') {\n        // 不是tag是字符串的就是普通的html  还有可能是我们的组件\n\n        // 实例化组件\n        if (createComponent(vnode)) { // 表示是组件\n            // 这里应该返回的是真实的dom元素\n            return vnode.componentInstance.$el;\n        }\n\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode);\n        children.forEach(child => { // 递归创建儿子节点，将儿子节点扔到父节点中\n            return vnode.el.appendChild(createElm(child))\n        })\n    } else {\n        // 虚拟dom上映射着真实dom  方便后续更新操作\n        vnode.el = document.createTextNode(text)\n    }\n    // 如果不是标签就是文本\n    return vnode.el;\n}\n// 更新属性\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {};\n    let el = vnode.el;\n    // 如果老的属性中有 新的属性中没有 ，在真实的dom上将这个属性删除掉\n\n    let newStyle = newProps.style || {};\n    let oldStyle = oldProps.style || {};\n    // mergeOptions\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            el.style[key] = ''; // 删除多余的\n        }\n    }\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key)\n        }\n    }\n\n    for (let key in newProps) { //以新的为准\n        if (key === 'style') {\n            for (let styleName in newProps.style) {\n                // 新增样式\n                el.style[styleName] = newProps.style[styleName];\n            }\n        } else if (key === 'class') {\n            el.className = newProps.class;\n        } else {\n            el.setAttribute(key, newProps[key]);\n        }\n    }\n}\n\n\n","import Watcher from './observer/watcher';\nimport {patch} from './vdom/patch'\n\n\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm  = this;\n        // 虚拟节点对应的内容\n        // index作为key 会导致更新的时候 出现复用的问题\n       \n        const prevVnode = vm._vnode;  // 保存上一次渲染的虚拟节点为了实现比对效果\n        // 第一次默认 肯定不需要diff算法\n        vm._vnode = vnode; // 真实渲染的内容\n        if(!prevVnode){\n            vm.$el = patch(vm.$el,vnode); // 需要用虚拟节点创建出真实节点 替换掉 真实的$el\n        }else{\n            vm.$el = patch(prevVnode,vnode);\n        }\n        // 我要通过虚拟节点 渲染出真实的dom\n    }\n}\n\nexport function mountComponent(vm,el){\n    const options = vm.$options; // render\n    vm.$el = el; // 真实的dom元素\n\n\n    // Watcher 就是用来渲染的\n    // vm._render 通过解析的render方法 渲染出虚拟dom _c _v _s\n    // vm._update 通过虚拟dom 创建真实的dom  \n    callHook(vm,'beforeMount');\n    // 渲染页面\n    let updateComponent = () =>{ // 无论是渲染还是更新都会调用此方法\n        // 返回的是虚拟dom\n        vm._update(vm._render());\n    }\n    // 渲染watcher 每个组件都有一个watcher   \n    new Watcher(vm,updateComponent,()=>{},true); // true表示他是一个渲染watcher\n    callHook(vm,'mounted');\n}\n\nexport function callHook(vm,hook){\n    const handlers = vm.$options[hook]; // [fn,fn,fn]\n    if(handlers){ // 找到对应的钩子依次执行\n        for(let i =0; i< handlers.length;i++){\n            handlers[i].call(vm);\n        }\n    }\n}","import {initState} from './state'\n\nimport {compileToFunction} from './compiler/index.js'\n\nimport {mountComponent,callHook} from './lifecycle'\n\nimport {mergeOptions} from './util/index';\nimport {nextTick} from './util/next-tick'\n// 在原型上添加一个init方法\nexport function initMixin(Vue){\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        // 数据的劫持\n        const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\n\n        // 将用户传递的 和 全局的进行一个合并 \n        vm.$options = mergeOptions(vm.constructor.options,options);\n      \n        callHook(vm,'beforeCreate')\n\n        // 初始化状态\n        initState(vm); // 分割代码\n\n        callHook(vm,'created');\n        // 如果用户传入了el属性 需要将页面渲染出来\n        // 如果用户传入了el 就要实现挂载流程\n\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n\n        // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\n        if(!options.render){\n            // 对模板进行编译\n            let template = options.template; // 取出模板\n            if(!template && el){\n                template = el.outerHTML;\n            }\n            const render = compileToFunction(template);\n            options.render = render;\n            // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom\n        }\n        // options.render\n        \n        // 渲染当前的组件 挂载这个组件\n        mountComponent(vm,el);\n    }\n    // 用户调用的nextTick\n    Vue.prototype.$nextTick = nextTick; // 注册了nextTick\n}","import { isObject,isReservedTag } from \"../util/index\";\nexport function createElement(vm,tag, data = {}, ...children) {\n    // ast -> render -> 调用\n    let key = data.key;\n    if(key){\n        delete data.key;\n    }\n    // // 以前表示的是标签  现在是组件  名字  上下文\n    if(isReservedTag(tag)){\n        return vnode(tag,data,key,children,undefined);\n    }else{\n        // 组件  找到组件的定义\n        let Ctor = vm.$options.components[tag];\n\n        return createComponent(vm,tag,data,key,children,Ctor)\n    }\n}\nfunction createComponent(vm,tag,data,key,children,Ctor){\n    if(isObject(Ctor)){\n        Ctor = vm.$options._base.extend(Ctor);\n    }\n    data.hook = {\n        init(vnode){\n            // 当前组件的实例 就是componentInstance\n            let child = vnode.componentInstance =  new Ctor({_isComponent:true});\n            // 组件的挂载 vm.$el \n            child.$mount(); // vnode.componentInstance.$el\n        }\n    }\n\n    // $vnode = 当前这个组件的 vnode   占位符vnode \n    return vnode(`vue-component-${Ctor.cid}-${tag}`,data,key,undefined,{Ctor,children})\n}\n\n\nexport function createTextNode(vm,text) {\n    return vnode(undefined,undefined,undefined,undefined,text);\n}\n\nfunction vnode(tag, data, key, children, text,componentOptions) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text,\n        componentOptions\n    }\n}\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作 （对象）\n\n// 1) 将template转换成ast语法树-> 生成render方法 -> 生成虚拟dom -> 真实的dom\n//  重新生成虚拟dom -> 更新dom\n\n","import {\n    createElement,\n    createTextNode\n} from './vdom/create-element'\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function () {\n        return createElement(this,...arguments); // tag,data,children1,children2\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(this,text);\n    }\n    Vue.prototype._s = function (val) {\n        return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n    }\n    Vue.prototype._render = function () {\n        const vm = this;\n        const {\n            render\n        } = vm.$options;\n        let vnode = render.call(vm); // 去实例上 取值\n\n        return vnode;\n    }\n}\n\n// 下次课 讲diff 非常简单易懂  单元测试\n// 下周 ssr  vuex  周日  下下周 晚上 3个小时  讲两天项目\n","export default function initMixin(Vue){\n    Vue.mixin = function (mixin) {\n        // 如何实现两个对象的合并 \n        this.options = mergeOptions(this.options,mixin)\n    }\n    // 生命周期的合并策略  [beforeCreate]\n}","export const ASSETS_TYPE = [\n    'component',\n    'directive',\n    'filter'\n]","import {ASSETS_TYPE} from './const'\n\nexport default function initAssetRegisters(Vue){\n    ASSETS_TYPE.forEach(type=>{ // \n        Vue[type] = function (id,definition) {\n            if(type === 'component'){\n                // 注册全局组件\n                // 使用extend 方法 将对象变成构造函数\n                // 子组件可能也有这个VueComponent.component方法\n                definition = Vue.extend(definition);\n            }else if(type === 'filter'){\n\n\n            }else if(type === 'directive'){\n\n\n            }\n            this.options[type+'s'][id] = definition\n        }\n    })\n}","import {mergeOptions} from '../util/index'\nexport default function initExtend(Vue){\n    // 为什么要有子类和父类  new Vue  （Vue的构造函数）  ._init()\n    // 创建子类  继承于父类 扩展的时候都扩展到自己的属性上\n    let cid = 0\n    Vue.extend = function (extendOptions) {\n        const Sub = function VueComponent(options){\n            this._init(options)\n        }\n        Sub.cid = cid++;\n        Sub.prototype = Object.create(this.prototype);\n        Sub.prototype.constructor = Sub;\n        Sub.options = mergeOptions(\n            this.options,\n            extendOptions\n        )\n        // mixin\n        // use \n        // ... \n        return Sub;\n    }\n}","import {mergeOptions} from '../util/index'\nimport initMixin from './mixin';\nimport initAssetRegisters from './assets.js'\nimport initExtend  from './extend'\nimport {ASSETS_TYPE} from './const'\nexport function initGlobalAPI(Vue){\n    // 整合了所有的全局相关的内容\n    Vue.options = {}\n    initMixin(Vue)\n   \n\n    // 初始化的全局过滤器 指令  组件\n\n    ASSETS_TYPE.forEach(type=>{\n        Vue.options[type+'s'] = {}\n    });\n    Vue.options._base = Vue; // _base 是Vue的构造函数\n\n    // 注册extend方法\n    initExtend(Vue)\n    initAssetRegisters(Vue)\n}\n","// Vue的核心代码 只是Vue的一个声明\nimport {\n    initMixin\n} from './init';\nimport {\n    renderMixin\n} from './render';\nimport {\n    lifecycleMixin\n} from './lifecycle';\n\nimport {\n    initGlobalAPI\n} from './initGlobalAPI/index'\n\n\nfunction Vue(options) {\n    // 进行Vue的初始化操作\n    this._init(options);\n\n}\n// 通过引入文件的方式 给Vue原型上添加方法\n\ninitMixin(Vue); // 给Vue原型上添加一个_init方法\nrenderMixin(Vue);\nlifecycleMixin(Vue);\n\n\n\n// 初始化全集的api\ninitGlobalAPI(Vue)\n\n\n\n// demo 产生两个虚拟节点进行比对\n\n// template =》 render方法 =》 vnode\n// import {\n//     compileToFunction\n// } from './compiler/index';\n// import {\n//     createElm,\n//     patch\n// } from './vdom/patch'\n// let vm1 = new Vue({\n//     data: {\n//         name: 'hello'\n//     }\n// });\n// let render1 = compileToFunction(`<div id=\"app\" a=\"1\" style=\"background:red\">\n//     <div style=\"background:red\" key=\"A\">A</div>\n//     <div style=\"background:yellow\" key=\"B\">B</div>\n//     <div style=\"background:blue\" key=\"C\">C</div>\n// </div>`);\n// let vnode = render1.call(vm1);\n\n// let el = createElm(vnode);\n// document.body.appendChild(el);\n\n\n\n// let vm2 = new Vue({\n//     data: {\n//         name: 'zf',\n//         age: 11\n//     }\n// });\n// let render2 = compileToFunction(`<div id=\"aaa\" b=\"2\" style=\"color:blue\">\n// <div style=\"background:green\" key=\"Q\">Q</div>\n//     <div style=\"background:red\" key=\"A\">A</div>\n//     <div style=\"background:yellow\" key=\"F\">F</div>\n//     <div style=\"background:blue\" key=\"C\">C</div>\n//     <div style=\"background:blue\" key=\"N\">N</div>\n// </div>`);\n// let newVnode = render2.call(vm2);\n\n\n// setTimeout(() => {\n//     patch(vnode, newVnode); // 传入两个虚拟节点 会在内部进行比对\n// }, 3000);\n\n\n\n// 1. diff算法的特点是 评级比对,我们正常操作dom元素，很少涉及到父变成子 子变成父 O(n3)\n\n\nexport default Vue"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","isObject","data","def","key","value","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","hook","mergeAssets","res","components","mergeOptions","parent","child","options","mergeField","hasOwnProperty","isReservedTag","tagName","str","obj","split","tag","id","Dep","subs","watcher","push","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","depend","dependArray","current","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","cb","nextTick","setTimeout","queue","has","flushSchedularQueue","run","queueWatcher","Watcher","exprOrFn","callback","getter","depsId","Set","deps","add","addSub","patch","oldVnode","vnode","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","updateChildren","appendChild","innerHTML","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","moveVnode","undefined","createComponent","init","componentInstance","$el","document","createElement","createTextNode","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleName","className","setAttribute","lifecycleMixin","Vue","_update","prevVnode","_vnode","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","$nextTick","Ctor","_base","extend","_isComponent","cid","componentOptions","renderMixin","_c","arguments","_v","_s","val","mixin","ASSETS_TYPE","initAssetRegisters","definition","initExtend","extendOptions","Sub","VueComponent","initGlobalAPI"],"mappings":"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"}