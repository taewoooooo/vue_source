{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util/index.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/index.js"],"sourcesContent":["\n\n// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n// slice()\n\n\nlet oldArrayMethods = Array.prototype;\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods); \n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'sort',\n    'splice',\n    'reverse'\n]\nmethods.forEach(method=>{\n    arrayMethods[method] = function (...args) { \n        const result = oldArrayMethods[method].apply(this,args); // 调用原生的数组方法\n        // push unshift 添加的元素可能还是一个对象\n        let inserted; // 当前用户插入的元素\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice': // 3个  新增的属性 splice 有删除 新增的的功能 arr.splice(0,1,{name:1})\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        if(inserted) ob.observerArray(inserted); // 将新增属性继续观测\n\n\n        return result;\n    }\n})","\n/**\n * \n * @param {*} data  当前数据是不是对象\n */\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null;\n}\nexport function def(data,key,value){\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value\n    })\n}\n// 取值时实现代理效果\nexport function proxy(vm,source,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue; \n        }\n    })\n}","// 把data中的数据 都使用Object.defineProperty重新定义 es5\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\nimport {arrayMethods} from './array.js'\nimport {\n    isObject,def\n} from '../util/index'\n// 后续我可以知道它是不是一个已经观察了的数据 __ob__\nclass Observer{\n    constructor(value){  // 仅仅是初始化的操作\n        // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\n        // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\n        def(value,'__ob__',this);\n        if(Array.isArray(value)){\n            // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\n            // 前端开发中很少很少 去操作索引 push shift unshift \n            value.__proto__ = arrayMethods;\n            // 如果数组里放的是对象我再监控\n            this.observerArray(value);\n        }else{\n             // 对数组监控\n            this.walk(value); // 对对象进行观测\n        }\n    }\n    observerArray(value){ // [{}]\n        for(let i = 0; i < value.length;i++){\n            observe(value[i]);\n        }\n    }\n    walk(data){\n        let keys = Object.keys(data); // [name,age,address]\n        // 如果这个data 不可配置 直接reurn\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key]);\n        });\n    }\n}\nfunction defineReactive(data,key,value){\n\n    observe(value); // 递归实现深度检测\n    Object.defineProperty(data,key,{\n        configurable:true,\n        enumerable:false,\n        get(){ //  获取值的时候做一些操作\n            return value;\n        },\n        set(newValue){ // 也可以做一些操作\n            console.log('更新数据')\n            if(newValue === value) return;\n            observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\n            value = newValue;\n        }\n    });\n}\n\nexport function observe(data) {\n    let isObj = isObject(data);\n    if (!isObj) {\n        return\n    }\n    return new Observer(data); // 用来观测数据\n}","import {\n    observe\n} from './observer/index.js'\nimport {\n    proxy\n} from './util/index'\nexport function initState(vm) {\n    const opts = vm.$options;\n    // vue的数据来源 属性 方法 数据 计算属性 watch\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethod(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\n\nfunction initProps() {}\n\nfunction initMethod() {}\n\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data; // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 对象劫持 用户改变了数据 我希望可以得到通知 =》 刷新页面\n    // MVVM模式 数据变化可以驱动视图变化 \n    // Object.defineProperty () 给属性增加get方法和set方法\n\n    // 为了让用户更好的使用 我希望可以直接vm.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n    observe(data); // 响应式原理\n}\n\nfunction initComputed() {}\n\nfunction initWatch() {}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nlet root = null; // ast语法树的树根\nlet currentParent; // 标识当前父亲是谁\nlet stack = [];\nconst ELEMENT_TYPE = 1;\nconst TEXT_TYPE = 3;\n\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: ELEMENT_TYPE,\n        children: [],\n        attrs,\n        parent: null\n    }\n}\nfunction start(tagName, attrs) {\n    // 遇到开始标签 就创建一个ast元素s\n    let element = createASTElement(tagName,attrs);\n    if(!root){\n        root = element;\n    }\n    currentParent = element; // 把当前元素标记成父ast树\n    stack.push(element); // 将开始标签存放到栈中\n}\nfunction chars(text) {\n    text = text.replace(/\\s/g,'');\n    if(text){\n        currentParent.children.push({\n            text,\n            type:TEXT_TYPE\n        })\n    }\n}\nfunction end(tagName) {\n    let element = stack.pop(); // 拿到的是ast对象\n    // 我要标识当前这个p是属于这个div的儿子的\n    currentParent = stack[stack.length-1];\n    if(currentParent){\n        element.parent = currentParent;\n        currentParent.children.push(element); // 实现了一个树的父子关系\n    }\n}\nexport function parseHTML(html) {\n    // 不停的去解析html字符串\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]); // 2解析结束标签\n                continue;\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd);\n        }\n        if (text) {\n            advance(text.length);\n            chars(text); // 3解析文本\n        }\n    }\n    function advance(n) {\n        html = html.substring(n);\n    }\n    function parseStartTag() {\n        let start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length); // 将标签删除\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // 将属性进行解析\n                advance(attr[0].length); // 将属性去掉\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                });\n            }\n            if (end) { // 去掉开始标签的 >\n                advance(end[0].length);\n                return match\n            }\n        }\n    }\n    return root;\n}\n","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\n// ?: 匹配不捕获\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\nimport {parseHTML} from './parser-html';\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\n    let str = '';\n    for(let i = 0; i < attrs.length;i++){\n        let attr = attrs[i];\n        if(attr.name === 'style'){\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\n            let obj = {};\n            attr.value.split(';').forEach(item=>{\n                let [key,value] = item.split(':');\n                obj[key] = value\n            });\n            attr.value = obj;\n        }\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\nfunction genChildren(el){\n    let children = el.children;\n    if(children && children.length > 0){\n        return `${children.map(c=>gen(c)).join(',')}`\n    }else{\n        return false;\n    }\n}\nfunction gen(node){\n    if(node.type == 1){\n        // 元素标签\n        return generate(node);\n    }else{\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\n        let tokens = [];\n        let match,index;\n        // 每次的偏移量 buffer.split()\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\n        while(match = defaultTagRE.exec(text)){\n            index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`;\n    }\n}\nfunction generate(el){ // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\n    let children = genChildren(el);\n    let code = `_c(\"${el.tag}\",${\n       el.attrs.length?genProps(el.attrs):'undefined'\n    }${\n        children? `,${children}` :''\n    })\n    `\n    return code;\n}\nexport function compileToFunction(template) {\n    // 1) 解析html字符串 将html字符串 => ast语法树\n    let root = parseHTML(template);\n    // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\n    let code = generate(root);\n    // 核心思路就是将模板转化成 下面这段字符串\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\n    // 将ast树 再次转化成js的语法\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\n\n    // 所有的模板引擎实现 都需要new Function + with\n    let renderFn = new Function(`with(this){ return ${code}}`);\n\n\n    // vue的render 他返回的是虚拟dom\n    return renderFn;\n}\n\n\n\n\n\n//   hellpo\n//      <p></p>\n// </div>\n\n\n// let root = {\n//     tag:'div',\n//     attrs:[{name:'id',value:'app'}],\n//     parent:null,\n//     type:1,\n//     children:[{\n//         tag:'p',\n//         attrs:[],\n//         parent:root,\n//         type:1,\n//         children:[\n//             {\n//                 text:'hello',\n//                 type:3\n//             }\n//         ]\n//     }]\n// }","class Watcher{\n    constructor(vm,exprOrFn,callback,options){\n        this.vm = vm;\n        this.callback = callback;\n        this.options = options;\n\n        this.getter = exprOrFn; // 将内部传过来的回调函数 放到getter属性上\n\n        this.get();\n    }\n    get(){\n        this.getter();\n    }\n}\n\nexport default Watcher","export function patch(oldVnode,vnode){\n    // 1.判断是更新还是要渲染\n\n    const isRealElement = oldVnode.nodeType;\n    if(isRealElement){\n        const oldElm = oldVnode; // div id=\"app\"\n        const parentElm = oldElm.parentNode; // body\n\n        let el = createElm(vnode);\n        parentElm.insertBefore(el,oldElm.nextSibling)\n        parentElm.removeChild(oldElm);\n\n    }   \n\n    // 递归创建真实节点 替换掉老的节点\n}\nfunction createElm(vnode){ // 根据虚拟节点创建真实的节点\n    let {tag,children,key,data,text} = vnode;\n    // 是标签就创建标签\n    if(typeof tag === 'string'){\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode);\n        children.forEach(child=>{ // 递归创建儿子节点，将儿子节点扔到父节点中\n            return vnode.el.appendChild(createElm(child))\n        })\n    }else{\n        // 虚拟dom上映射着真实dom  方便后续更新操作\n        vnode.el = document.createTextNode(text)\n    }\n    // 如果不是标签就是文本\n    return vnode.el;\n}\n// 更新属性\nfunction updateProperties(vnode){\n    let newProps = vnode.data;\n    let el = vnode.el;\n    for(let key in newProps){\n        if(key === 'style'){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName];\n            }\n        }else if(key === 'class'){\n            el.className = newProps.class;\n        }else{\n            el.setAttribute(key,newProps[key]);\n        }\n    }\n}\n","import Watcher from './observer/watcher';\nimport {patch} from './vdom/patch'\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm  = this;\n        vm.$el = patch(vm.$el,vnode); // 需要用虚拟节点创建出真实节点 替换掉 真实的$el\n       \n        // 我要通过虚拟节点 渲染出真实的dom\n      \n    }\n}\n\nexport function mountComponent(vm,el){\n    const options = vm.$options; // render\n    vm.$el = el; // 真实的dom元素\n\n\n    // Watcher 就是用来渲染的\n    // vm._render 通过解析的render方法 渲染出虚拟dom _c _v _s\n    // vm._update 通过虚拟dom 创建真实的dom  \n\n    // 渲染页面\n    let updateComponent = () =>{ // 无论是渲染还是更新都会调用此方法\n        // 返回的是虚拟dom\n        vm._update(vm._render());\n    }\n    // 渲染watcher 每个组件都有一个watcher   \n    new Watcher(vm,updateComponent,()=>{},true); // true表示他是一个渲染watcher\n}","import {initState} from './state'\n\nimport {compileToFunction} from './compiler/index.js'\n\nimport {mountComponent} from './lifecycle'\n// 在原型上添加一个init方法\nexport function initMixin(Vue){\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        // 数据的劫持\n        const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\n        vm.$options = options;\n\n        // 初始化状态\n        initState(vm); // 分割代码\n\n        // 如果用户传入了el属性 需要将页面渲染出来\n        // 如果用户传入了el 就要实现挂载流程\n\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n\n        // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\n        if(!options.render){\n            // 对模板进行编译\n            let template = options.template; // 取出模板\n            if(!template && el){\n                template = el.outerHTML;\n            }\n            const render = compileToFunction(template);\n            options.render = render;\n            // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom\n\n            console.log(render);\n        }\n        // options.render\n        \n        // 渲染当前的组件 挂载这个组件\n        mountComponent(vm,el);\n    }\n}","export function createElement(tag, data = {}, ...children) {\n    let key = data.key;\n    if(key){\n        delete data.key;\n    }\n    return vnode(tag,data,key,children,undefined);\n}\nexport function createTextNode(text) {\n    return vnode(undefined,undefined,undefined,undefined,text);\n}\n\nfunction vnode(tag, data, key, children, text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作 （对象）\n\n// 1) 将template转换成ast语法树-> 生成render方法 -> 生成虚拟dom -> 真实的dom\n//  重新生成虚拟dom -> 更新dom\n\n","import {\n    createElement,\n    createTextNode\n} from './vdom/create-element'\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function () {\n        return createElement(...arguments); // tag,data,children1,children2\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(text);\n    }\n    Vue.prototype._s = function (val) {\n        return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n    }\n    Vue.prototype._render = function () {\n        const vm = this;\n        const {\n            render\n        } = vm.$options;\n        let vnode = render.call(vm); // 去实例上 取值\n\n        return vnode;\n    }\n}","// Vue的核心代码 只是Vue的一个声明\nimport {initMixin} from './init';\nimport {renderMixin} from './render';\nimport {lifecycleMixin} from './lifecycle';\n\nfunction Vue(options){\n    // 进行Vue的初始化操作\n    this._init(options);\n\n}\n// 通过引入文件的方式 给Vue原型上添加方法\n\ninitMixin(Vue); // 给Vue原型上添加一个_init方法\nrenderMixin(Vue);\nlifecycleMixin(Vue);\nexport default Vue\n"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","isObject","data","def","key","value","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","Observer","isArray","__proto__","walk","i","length","observe","keys","defineReactive","console","log","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","options","getter","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val"],"mappings":"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"}