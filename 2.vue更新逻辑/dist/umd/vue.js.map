{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util/index.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observer/schedular.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":[" \n// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n// slice() \nlet oldArrayMethods = Array.prototype;\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods);  \nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'sort',\n    'splice',\n    'reverse'\n]\nmethods.forEach(method=>{\n    arrayMethods[method] = function (...args) { \n        const result = oldArrayMethods[method].apply(this,args); // 调用原生的数组方法\n        // push unshift 添加的元素可能还是一个对象\n        let inserted; // 当前用户插入的元素\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice': // 3个  新增的属性 splice 有删除 新增的的功能 arr.splice(0,1,{name:1})\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        if(inserted) ob.observerArray(inserted); // 将新增属性继续观测 \n        ob.dep.notify(); // 如果用户调用了 push方法 我会通知当前这个dep去更新\n        return result;\n    }\n})","\n/**\n * \n * @param {*} data  当前数据是不是对象\n */\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null;\n}\nexport function def(data,key,value){\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value\n    })\n}\n// 取值时实现代理效果\nexport function proxy(vm,source,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue; \n        }\n    })\n}\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed'\n];\n\nlet strats = {}\n\nfunction mergeHook(parentVal,childVal){\n    if(childVal){\n        if(parentVal){\n            return parentVal.concat(childVal);\n        }else{\n           return [childVal]; \n        }\n    }else{\n        return parentVal;\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})\n\nexport function mergeOptions(parent,child){\n    const options = {};\n    for(let key in parent){\n        mergeField(key);\n    }\n    for(let key in child){ //  如果已经合并过了就不需要再次合并了\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key);\n        }\n    }\n    // 默认的合并策略 但是有些属性 需要有特殊的合并方式 生命周期的合并\n    function mergeField(key) {\n        if(strats[key]) {\n            return options[key] = strats[key](parent[key],child[key])\n        }\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\n            options[key] = {\n                ...parent[key],\n                ...child[key]\n            }\n        }else if(child[key] == null){\n            options[key] = parent[key];\n        }else{\n            options[key] = child[key];\n        }   \n    }\n    return options;\n}","let id = 0;\nclass Dep{\n    constructor(){\n        this.id = id++;\n        this.subs = []; \n    }\n    addSub(watcher){\n        this.subs.push(watcher); // 观察者模式\n    }\n    depend(){\n        // 让这个watcher 记住我当前的dep,如果watcher没存过dep ，dep肯定不能存过watcher\n        Dep.target.addDep(this);\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nlet stack = [];\n// 目前可以做到 将watcher保留起来 和 移除的功能\nexport function pushTarget(watcher){\n    Dep.target = watcher;\n    stack.push(watcher);\n}\nexport function popTarget(){\n    stack.pop();\n    Dep.target = stack[stack.length -1];\n}\n\n\nexport default Dep","// 把data中的数据 都使用Object.defineProperty重新定义 es5\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\nimport {arrayMethods} from './array.js'\nimport {\n    isObject,def\n} from '../util/index'\nimport Dep from './dep.js';\n// 后续我可以知道它是不是一个已经观察了的数据 __ob__\nclass Observer{  \n    constructor(value){  // 仅仅是初始化的操作\n        this.dep = new Dep; // 给数组用的\n        // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\n        // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\n        def(value,'__ob__',this);\n        if(Array.isArray(value)){\n            // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\n            // 前端开发中很少很少 去操作索引 push shift unshift \n            value.__proto__ = arrayMethods;\n            // 如果数组里放的是对象我再监控\n            this.observerArray(value); //  这里虽然递归了 但是没有依赖收集\n        }else{\n             // 对数组监控\n            this.walk(value); // 对对象进行观测\n        }\n    }\n    observerArray(value){ // [{}]\n        for(let i = 0; i < value.length;i++){\n            observe(value[i]);\n        }\n    }\n    walk(data){\n        let keys = Object.keys(data); // [name,age,address]\n        // 如果这个data 不可配置 直接reurn\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key]);\n        });\n    }\n}\n// Vue.observable\nfunction defineReactive(data,key,value){\n    let dep = new Dep(); // 这个dep 是为了给对象使用的\n    // 这里这个value可能是数组 也可能是对象 ，返回的结果是observer的实例，当前这个value对应的observer\n    let childOb = observe(value); // 数组的observer实例\n    Object.defineProperty(data,key,{\n        configurable:true,\n        enumerable:true,\n        get(){ //  获取值的时候做一些操作 \n           // 每个属性都对应着自己的watcher\n            if(Dep.target) { // 如果当前有watcher \n                dep.depend(); // 意味着我要将watcher存起来\n                if(childOb){ // *******数组的依赖收集*****\n                    childOb.dep.depend(); // 收集了数组的相关依赖 \n                    // 如果数组中还有数组\n                    if(Array.isArray(value)){\n                        dependArray(value);\n                    } \n                }\n            }\n            return value;\n        },\n        set(newValue){ // 也可以做一些操作\n            // console.log('更新数据')\n            if(newValue === value) return;\n            observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\n            value = newValue;\n            dep.notify(); // 通知依赖的watcher来进行一个更新操作\n        }\n    });\n}\nfunction dependArray(value){\n    for(let i =0 ; i < value.length;i++){\n        let current = value[i]; // 将数组中的每一个都取出来，数据变化后 也去更新视图\n        // 数组中的数组的依赖收集\n        current.__ob__ && current.__ob__.dep.depend();\n        if(Array.isArray(current)){\n            dependArray(current);\n        }\n    }\n} \nexport function observe(data) {\n    let isObj = isObject(data);\n    if (!isObj) {\n        return\n    }\n    return new Observer(data); // 用来观测数据\n}\n","import {\n    observe\n} from './observer/index.js'\nimport {\n    proxy\n} from './util/index'\nexport function initState(vm) {\n    const opts = vm.$options;\n    // vue的数据来源 属性 方法 数据 计算属性 watch\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethod(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\n\nfunction initProps() {}\n\nfunction initMethod() {}\n\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data; // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 对象劫持 用户改变了数据 我希望可以得到通知 =》 刷新页面\n    // MVVM模式 数据变化可以驱动视图变化 \n    // Object.defineProperty () 给属性增加get方法和set方法\n\n    // 为了让用户更好的使用 我希望可以直接vm.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n    observe(data); // 响应式原理\n}\n\nfunction initComputed() {}\n\nfunction initWatch() {}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function parseHTML(html) {\n\n    let root = null; // ast语法树的树根\n    let currentParent; // 标识当前父亲是谁\n    let stack = [];\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tagName, attrs) {\n        // 遇到开始标签 就创建一个ast元素s\n        let element = createASTElement(tagName, attrs);\n        if (!root) {\n            root = element;\n        }\n        currentParent = element; // 把当前元素标记成父ast树\n        stack.push(element); // 将开始标签存放到栈中\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            currentParent.children.push({\n                text,\n                type: TEXT_TYPE\n            })\n        }\n    }\n\n    function end(tagName) {\n        let element = stack.pop(); // 拿到的是ast对象\n        // 我要标识当前这个p是属于这个div的儿子的\n        currentParent = stack[stack.length - 1];\n        if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element); // 实现了一个树的父子关系\n        }\n    }\n    // 不停的去解析html字符串\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]); // 2解析结束标签\n                continue;\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd);\n        }\n        if (text) {\n            advance(text.length);\n            chars(text); // 3解析文本\n        }\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        let start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length); // 将标签删除\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // 将属性进行解析\n                advance(attr[0].length); // 将属性去掉\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                });\n            }\n            if (end) { // 去掉开始标签的 >\n                advance(end[0].length);\n                return match\n            }\n        }\n    }\n    return root;\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\n    let str = '';\n    for(let i = 0; i < attrs.length;i++){\n        let attr = attrs[i];\n        if(attr.name === 'style'){\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\n            let obj = {};\n            attr.value.split(';').forEach(item=>{\n                let [key,value] = item.split(':');\n                obj[key] = value\n            });\n            attr.value = obj;\n        }\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\nfunction genChildren(el){\n    let children = el.children;\n    if(children && children.length > 0){\n        return `${children.map(c=>gen(c)).join(',')}`\n    }else{\n        return false;\n    }\n}\nfunction gen(node){\n    if(node.type == 1){\n        // 元素标签\n        return generate(node);\n    }else{\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\n        let tokens = [];\n        let match,index;\n        // 每次的偏移量 buffer.split()\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\n        while(match = defaultTagRE.exec(text)){\n            index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`;\n    }\n}\nexport function generate(el){ // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\n    let children = genChildren(el);\n    let code = `_c(\"${el.tag}\",${\n       el.attrs.length?genProps(el.attrs):'undefined'\n    }${\n        children? `,${children}` :''\n    })\n    `\n    return code;\n}","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\n// ?: 匹配不捕获\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\nimport {parseHTML} from './parser-html';\nimport {generate} from './generate';\nexport function compileToFunction(template) {\n    // 1) 解析html字符串 将html字符串 => ast语法树\n    let root = parseHTML(template);\n    // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\n    let code = generate(root);\n    // 核心思路就是将模板转化成 下面这段字符串\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\n    // 将ast树 再次转化成js的语法\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\n\n    // 所有的模板引擎实现 都需要new Function + with\n    let renderFn = new Function(`with(this){ return ${code}}`);\n\n\n    // vue的render 他返回的是虚拟dom\n    return renderFn;\n}\n\n\n\n\n\n//   hellpo\n//      <p></p>\n// </div>\n\n\n// let root = {\n//     tag:'div',\n//     attrs:[{name:'id',value:'app'}],\n//     parent:null,\n//     type:1,\n//     children:[{\n//         tag:'p',\n//         attrs:[],\n//         parent:root,\n//         type:1,\n//         children:[\n//             {\n//                 text:'hello',\n//                 type:3\n//             }\n//         ]\n//     }]\n// }","let callbacks = []\n// [flushSchedularQueue,userNextTick]\nlet waiting = false;\nfunction flushCallback(){\n    callbacks.forEach(cb=>cb()); \n    waiting = false;\n    callbacks = [];\n}\nexport function nextTick(cb){\n    // 多次调用nextTick 如果没有刷新的时候 就先把他放到数组中,\n    // 刷新后 更改waiting\n    callbacks.push(cb);\n    if(waiting === false){\n        setTimeout(flushCallback, 0);\n        waiting = true;\n    }\n}\n\n// 这个地方 非常的（饶） 只能自己加一些你自己的理解\n// 不要过度的理解 \n\n// 给大家花两个小时先过一下 vue源码  怎么分析源码","let queue = [];\nlet has = {};\nimport {nextTick} from '../util/next-tick'; \nfunction flushSchedularQueue(){\n    queue.forEach(watcher=>watcher.run());\n    queue = [] ; // 让下一次可以继续使用\n    has = {};\n}\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n    if (has[id] == null) {\n        queue.push(watcher);\n        has[id] = true; \n        // 宏任务和微任务 （vue里面使用Vue.nextTick）\n        // Vue.nextTick = promise / mutationObserver / setImmediate/ setTimeout\n        nextTick(flushSchedularQueue)\n    }\n}","import {\n    pushTarget,\n    popTarget\n} from './dep.js';\n\nimport {queueWatcher} from './schedular'\nlet id = 0;\nclass Watcher {\n    constructor(vm, exprOrFn, callback, options) {\n        this.vm = vm;\n        this.callback = callback;\n        this.options = options;\n        this.id = id++;\n        this.getter = exprOrFn; // 将内部传过来的回调函数 放到getter属性上\n        this.depsId = new Set(); // es6中的集合 （不能放重复项）\n        this.deps = [];\n        this.get(); // 调用get方法 会让渲染watcher执行\n    }\n    addDep(dep) { // watcher 里不能放重复的dep  dep里不能放重复的watcher\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this);\n        }\n    }\n    get() {\n        pushTarget(this); // 把watcher存起来  Dep.target = this\n        this.getter(); // 渲染watcher的执行  \n        popTarget(); // 移除watcher\n    }\n    update() {\n        queueWatcher(this);\n        // console.log(this.id)\n        // 等待着 一起来更新 因为每次调用update的时候 都放入了watcher\n        // this.get();\n    }\n    run(){\n        this.get();\n    }\n}\n// 下次课 会带大家看一次vue的源代码\n\n// 在模板中取值时 会进行依赖收集 在更改数据是会进行对应的watcher 调用更新操作\n// dep 和 watcher 是一个多对多的关系  dep里存放着相关的watcher 是一个观察者模式\nexport default Watcher","export function patch(oldVnode,vnode){\n    // 1.判断是更新还是要渲染\n\n    const isRealElement = oldVnode.nodeType;\n    if(isRealElement){\n        const oldElm = oldVnode; // div id=\"app\"\n        const parentElm = oldElm.parentNode; // body\n\n        let el = createElm(vnode);\n        parentElm.insertBefore(el,oldElm.nextSibling)\n        parentElm.removeChild(oldElm);\n\n        // 需要将渲染好的结果返回\n        return el;\n    }   \n\n    // 递归创建真实节点 替换掉老的节点\n}\nfunction createElm(vnode){ // 根据虚拟节点创建真实的节点\n    let {tag,children,key,data,text} = vnode;\n    // 是标签就创建标签\n    if(typeof tag === 'string'){\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode);\n        children.forEach(child=>{ // 递归创建儿子节点，将儿子节点扔到父节点中\n            return vnode.el.appendChild(createElm(child))\n        })\n    }else{\n        // 虚拟dom上映射着真实dom  方便后续更新操作\n        vnode.el = document.createTextNode(text)\n    }\n    // 如果不是标签就是文本\n    return vnode.el;\n}\n// 更新属性\nfunction updateProperties(vnode){\n    let newProps = vnode.data;\n    let el = vnode.el;\n    for(let key in newProps){\n        if(key === 'style'){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName];\n            }\n        }else if(key === 'class'){\n            el.className = newProps.class;\n        }else{\n            el.setAttribute(key,newProps[key]);\n        }\n    }\n}\n","import Watcher from './observer/watcher';\nimport {patch} from './vdom/patch'\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm  = this;\n        vm.$el = patch(vm.$el,vnode); // 需要用虚拟节点创建出真实节点 替换掉 真实的$el\n       \n        // 我要通过虚拟节点 渲染出真实的dom\n      \n    }\n}\n\nexport function mountComponent(vm,el){\n    const options = vm.$options; // render\n    vm.$el = el; // 真实的dom元素\n\n\n    // Watcher 就是用来渲染的\n    // vm._render 通过解析的render方法 渲染出虚拟dom _c _v _s\n    // vm._update 通过虚拟dom 创建真实的dom  \n    callHook(vm,'beforeMount');\n    // 渲染页面\n    let updateComponent = () =>{ // 无论是渲染还是更新都会调用此方法\n        // 返回的是虚拟dom\n        vm._update(vm._render());\n    }\n    // 渲染watcher 每个组件都有一个watcher   \n    new Watcher(vm,updateComponent,()=>{},true); // true表示他是一个渲染watcher\n    callHook(vm,'mounted');\n}\n\nexport function callHook(vm,hook){\n    const handlers = vm.$options[hook]; // [fn,fn,fn]\n    if(handlers){ // 找到对应的钩子依次执行\n        for(let i =0; i< handlers.length;i++){\n            handlers[i].call(vm);\n        }\n    }\n}","import {initState} from './state'\n\nimport {compileToFunction} from './compiler/index.js'\n\nimport {mountComponent,callHook} from './lifecycle'\n\nimport {mergeOptions} from './util/index';\nimport {nextTick} from './util/next-tick'\n// 在原型上添加一个init方法\nexport function initMixin(Vue){\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        // 数据的劫持\n        const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\n\n        // 将用户传递的 和 全局的进行一个合并 \n        vm.$options = mergeOptions(vm.constructor.options,options);\n\n        callHook(vm,'beforeCreate')\n\n        // 初始化状态\n        initState(vm); // 分割代码\n\n        callHook(vm,'created');\n        // 如果用户传入了el属性 需要将页面渲染出来\n        // 如果用户传入了el 就要实现挂载流程\n\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n\n        // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\n        if(!options.render){\n            // 对模板进行编译\n            let template = options.template; // 取出模板\n            if(!template && el){\n                template = el.outerHTML;\n            }\n            const render = compileToFunction(template);\n            options.render = render;\n            // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom\n        }\n        // options.render\n        \n        // 渲染当前的组件 挂载这个组件\n        mountComponent(vm,el);\n    }\n    // 用户调用的nextTick\n    Vue.prototype.$nextTick = nextTick; // 注册了nextTick\n}","export function createElement(tag, data = {}, ...children) {\n    let key = data.key;\n    if(key){\n        delete data.key;\n    }\n    return vnode(tag,data,key,children,undefined);\n}\nexport function createTextNode(text) {\n    return vnode(undefined,undefined,undefined,undefined,text);\n}\n\nfunction vnode(tag, data, key, children, text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作 （对象）\n\n// 1) 将template转换成ast语法树-> 生成render方法 -> 生成虚拟dom -> 真实的dom\n//  重新生成虚拟dom -> 更新dom\n\n","import {\n    createElement,\n    createTextNode\n} from './vdom/create-element'\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function () {\n        return createElement(...arguments); // tag,data,children1,children2\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(text);\n    }\n    Vue.prototype._s = function (val) {\n        return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n    }\n    Vue.prototype._render = function () {\n        const vm = this;\n        const {\n            render\n        } = vm.$options;\n        let vnode = render.call(vm); // 去实例上 取值\n\n        return vnode;\n    }\n}","import {mergeOptions} from '../util/index'\nexport function initGlobalAPI(Vue){\n    // 整合了所有的全局相关的内容\n    Vue.options = {} \n    Vue.mixin = function (mixin) {\n        // 如何实现两个对象的合并 \n        this.options = mergeOptions(this.options,mixin)\n    }\n    // 生命周期的合并策略  [beforeCreate]\n}","// Vue的核心代码 只是Vue的一个声明\nimport {initMixin} from './init';\nimport {renderMixin} from './render';\nimport {lifecycleMixin} from './lifecycle';\n\nimport {initGlobalAPI} from './initGlobalAPI/index'\n\n\nfunction Vue(options){\n    // 进行Vue的初始化操作\n    this._init(options);\n\n}\n// 通过引入文件的方式 给Vue原型上添加方法\n\ninitMixin(Vue); // 给Vue原型上添加一个_init方法\nrenderMixin(Vue);\nlifecycleMixin(Vue);\n\n\n\n// 初始化全集的api\ninitGlobalAPI(Vue)\nexport default Vue\n"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","isObject","data","def","key","value","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","id","Dep","subs","watcher","push","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","depend","dependArray","current","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","cb","nextTick","setTimeout","queue","has","flushSchedularQueue","run","queueWatcher","Watcher","exprOrFn","callback","getter","depsId","Set","deps","add","addSub","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","$nextTick","undefined","renderMixin","_c","arguments","_v","_s","val","initGlobalAPI","mixin"],"mappings":"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"}